package flat/parser/matchers

import flat/ast
import flat/datastruct/HashMap
import flat/compiler/models/Token

data class extends TokenMatch<SingleTokenPattern> {
    override public inflateNode<NodeType extends Node>(NodeType node) => node {
        if (pattern.field) {
            if (let nodeField = node.class.getField(pattern.field, true)) {
                if (let token = tokens.first) {
                    nodeField.setValue(node, token)
                }
            } else {
                throw Exception("Invalid field '#{pattern.field}' for Node type '#{node.class.name}'")
            }
        }
    }
}