package flat/parser/matchers

import flat/ast
import flat/annotations
import flat/parser
import flat/compiler/models/Token
import flat/io/File

testable class {
  test `can generate node with name from SingleTokenPattern`() {
    let testParser = TestParser()
    testParser.match(Token(type: Token.Type.IDENTIFIER, value: "test"))

    let node = (FieldNode)testParser.generateNode()

    expect(node).toNotBe(null)
    expect(node.class).toBe(FieldNode.class)
    expect(node.name).toBe("test")
  }

  class TestParser extends ParserBase {
    override lazy TokenPattern pattern => SingleTokenPattern<FieldNode>(
      type: Token.Type.IDENTIFIER,
      field: "name"
    )
  }
}
